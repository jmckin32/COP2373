Jaxon McKinney, 8 July 2024

Using the previously made Money class to subclass the previously made BankAcc class with and restructure to fit the new structure.

Variables:
(in the Money class) v for the value and units for the unit
default_curr: for a default currency (currently USD)
exch_dict: a dictionary for currency exchanging (first three letters for the currency being converted into the right currency, other number for the exchange rate)
(in the BankAcc class)
name: name
accNum: account number
v: balance
intRate: interest rate
(main)
pat: for valid inputs on numbers
inp: for which function to test
val + unit: for calculations with the main obj1 object
days: for the intCalc function

Functions:
(Money):
   __new__: for the things __new__ does
   __init__: initialize stuff (plus can check if needs to do default currency or not)
   __str__: string representation ("Value Unit")
   __repr__: class representation ("Money(Value, Unit)")
   __add__: adding (with currency exchange)
   __sub__: subtracting (with currency exchange)
   __mul__: multiplying (with currency exchange)
(BankAcc):
   __new__: new stuff
   __init__: init stuff
   __str__: the string output (straightforward)
   addIntRate + subIntRate: add or subtract to interest rate
   displayBalance: display balance
   intCalc: calculating interest rate for a certain amount of time
main():
   testing!!!!!

(Money)
1. Set the exchange rates and the default currency
2. __new__ and __init__, init having a function where it checks if a unit was given, and if not defaults to the default currency.
3. __str__ and __repr__, you can check how they're shown in the Functions list
4. (gonna bunch add sub and mul together) Check if the first number's unit is the same as the second number's unit
	if not: take the exchange rate, apply it to the second number, then do the operation, rounding it appropriately, and adding the first number's unit at the end
	if yes: same as above but without the exchange rate
(BankAcc)
1: inititalizes the values. including name, acc#, balance, and interest rate
2: Create the methods
 2a: add/subIntRate(), withdraw(), deposit() are just simple value changes
 2b: displayBalance just returns the balance
 2c: intCalc asks for number of days, and then prints the result of the P*R*T formula, rounded to 2 decimals
 2d: __str__() returns each value in string format
(Main)
1. Create object, get some variables, the usualy
2. Create loop to ask for each

https://github.com/jmckin32/COP2373